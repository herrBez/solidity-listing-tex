\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{listing-solidity}[2018/10/10 Listing Solidity]

% based on the grammar of solidity:
% https://github.com/ethereum/solidity/blob/develop/docs/grammar.txt

\RequirePackage{listings}
\RequirePackage{xcolor}

\lstdefinelanguage{Solidity}{
    keywords={
    solidity, % only for the initial pragma, actually it is not a keyword 
    % SourceUnit
    pragma, % PragmaDirective
    import, as, from, % ImportDirective
    contract, library, interface, is, % ContractDefinition
    % ContractPart
    % InheritanceSpecifier
    public, internal, private, constant, %StateVariableDeclaration   
    using, for, % UsingForDeclaration
    struct, % StructDefinition
    modifier, % ModifierDefinition
    % ModifierInvocation
    function, external, public, internal, private, returns, % FunctionDefinition
    event, anonymous, % EventDefnition
    % EnumValue
    enum, % EnumDefinition
    %  ParameterList
    % Parameter
    % EventParameterList
    indexed, % EventParameter
    % FunctionTypeParameterList
    % FunctionTypeParameter
    % VariableDeclaration
    address, payable, % TypeName
    % UserDefinedTypeName
    mapping, % Mapping
    % ArrayTypeName
    function, internal, external, returns, % FunctionTypeName
    memory, storage, calldata, % StorageLocation
    pure, view, payable, % StateMutability
    % Block
    % Statement
    % ExpressionStatement
    if, else, %IfStatement
    while, % WhileStatement
    % PlaceholderStatement
    % SimpleStatement
    for, % ForStatement
    assembly, % InlineAssemblyStatement
    do, while, % DoWhileStatement
    continue, % Continue
    break, % break
    return, % Return
    throw, % Throw
    emit, % EmitStatement
    % VariableDefinition
    % Expression
    % PrimaryExpression
    % ExpressionList
    % NameValueList
    % FunctionCall
    % FunctionCallArguments
    new, % NewExpression
    % MemberAccess
    % IndexAccess
    true, false, % BooleanLiteral
    % NumberLiteral
    wei, szabo, finney, ether, seconds, minutes, hours, days, weeks, years, % NumberUnit
    hex, % HexLiteral
    % StringLiteral --> this case is covered by stringstyle lst command
    % HexNumber
    % DecimalNumber
    % TupleExpression
    % ElementaryTypeNameExpression
    % stringstyle --> ndkeyword
    % Int --> ndkeyword
    % Uint --> ndkeyword
    % Byte --> ndkeyword
    fixed, % Fixed
    ufixed, % Ufixed
    % InlineAssemblyBlock
    % AssemblyItem = Identifier | FunctionalAssemblyExpression | InlineAssemblyBlock | AssemblyVariableDeclaration | AssemblyAssignment | AssemblyLabel | NumberLiteral | StringLiteral | HexLiteral
    % AssemblyExpression = Identifier | FunctionalAssemblyExpression | NumberLiteral | StringLiteral | HexLiteral
    let % AssemblyVariableDeclaration
    % AssemblyAssignment
    % AssemblyLabel
    % FunctionalAssemblyExpression
    },
    basicstyle=\ttfamily,
    keywordstyle=\color{blue}\bfseries,
    ndkeywords={
    % Begin Int
    int, int8, int16, int24, int32, int40, int48, int56, int64, int72, int80,
    int88, int96, int104, int112, int120, int128, int136, int144, int152,
    int160, int168, int176, int184, int192, int200, int208, int216, int224,
    int232, int240, int248, int256,
    % End Int
    % Begin Uint
    uint, uint8, uint16, uint24, uint32, uint40, uint48, uint56, uint64, uint72,
    uint80, uint88, uint96, uint104, uint112, uint120, uint128, uint136,
    uint144, uint152, uint160, uint168, uint176, uint184, uint192, uint200,
    uint208, uint216, uint224, uint232, uint240, uint248, uint256,
    % End Uint
    % Begin Byte
    byte, bytes, bytes1, bytes2, bytes3, bytes4, bytes5, bytes6,
    bytes7, bytes8, bytes9, bytes10, bytes11, bytes12, bytes13, bytes14,
    bytes15, bytes16, bytes17, bytes18, bytes19, bytes20, bytes21, bytes22,
    bytes23, bytes24, bytes25, bytes26, bytes27, bytes28, bytes29, bytes30,
    bytes31, bytes32,
    % End Byte
    address, bool, string % stringstyle
    },
    ndkeywordstyle=\color{violet}\bfseries,
    % identifierstyle=\color{green},
    literate={
    {0}{{{\color{teal}0}}}1
    {1}{{{\color{teal}1}}}1
    {2}{{{\color{teal}2}}}1
    {3}{{{\color{teal}3}}}1
    {4}{{{\color{teal}4}}}1
    {5}{{{\color{teal}5}}}1
    {6}{{{\color{teal}6}}}1
    {7}{{{\color{teal}7}}}1
    {8}{{{\color{teal}8}}}1
    {9}{{{\color{teal}9}}}1
    },
    sensitive=false,
    comment=[l]{//},
    morecomment=[s]{/*}{*/},
    commentstyle=\color{gray}\ttfamily,
    stringstyle=\color{orange}\ttfamily,
    morestring=[b]',
    morestring=[b]"
}


